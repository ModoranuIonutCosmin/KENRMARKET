trigger:
  branches:
    include:
    - refs/heads/master
parameters:
  - name: 'dockerfiles'
    type: object
    default:
      - [$(Build.SourcesDirectory)/src/Cart/Cart.API/Dockerfile, cartapi]
      - [$(Build.SourcesDirectory)/src/Customers/Customers.API/Dockerfile, customersapi]
      - [$(Build.SourcesDirectory)/src/Gateway/Gateway.API/Dockerfile, gatewayapi]
      - [$(Build.SourcesDirectory)/src/Order/Order.API/Dockerfile, orderapi]
      - [$(Build.SourcesDirectory)/src/Payments/Payments.API/Dockerfile, paymentsapi]
      - [$(Build.SourcesDirectory)/src/Products/Products.API/Dockerfile, productsapi]
      - [$(Build.SourcesDirectory)/src/Watchdog/Watchdog.WebApp/Dockerfile, watchdogwebapp]
      - [$(Build.SourcesDirectory)/src/Order/Order.SignalR/Dockerfile, ordersignalr]
  - name: 'registryName'
    type: string
    default: 'modoranuc'


name: $(date:yyyyMMdd)$(rev:.r)
stages:
  - stage: Build_And_Push
    jobs:
    - job: PushDockerImages
      displayName: Push images to docker hub
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self
        clean: true
        fetchTags: false
      - ${{ each dockerfile in parameters.dockerfiles }}:
        - task: Docker@2
          displayName: 'Build&push ${{ dockerfile[1] }}'
          inputs:
            containerRegistry: 'modoranuc'
            repository: '${{ parameters.registryName }}/${{ dockerfile[1] }}'
            command: 'buildAndPush'
            Dockerfile: '${{ dockerfile[0] }}'
            buildContext: '$(Build.SourcesDirectory)'
            tags: 'latest'
  - stage: create_infra_tf
    jobs:
      - job: create_infra_tf_job
        pool:
          vmImage: 'ubuntu-latest'
        displayName: Create infrastructure \w terraform
        steps:
        - task: TerraformTaskV3@3
          displayName: 'Init terraform'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Azure for Students(ba6a171e-b681-4996-92d7-1df841bb2a50)'
            backendAzureRmResourceGroupName: 'terraform'
            backendAzureRmStorageAccountName: 'terraformstoragekmarket'
            backendAzureRmContainerName: 'terraform'
            backendAzureRmKey: 'terraform/terraform.tfstate'
        - task: TerraformTaskV3@3
          displayName: 'Apply terraform'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/scripts/create_resources'
            environmentServiceNameAzureRM: 'Azure for Students(ba6a171e-b681-4996-92d7-1df841bb2a50)'



  
  
    
...
