﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Cart_API
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"tip_proprietate", @"tip_proprietate")      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"nr_camere", @"nr_camere"),new InputOutputColumnPair(@"suprafata", @"suprafata"),new InputOutputColumnPair(@"suprafata_teren", @"suprafata_teren"),new InputOutputColumnPair(@"an_constructie", @"an_constructie")}))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"zona", @"zona"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"tip_proprietate",@"nr_camere",@"suprafata",@"suprafata_teren",@"an_constructie",@"zona"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=13187,MinimumExampleCountPerLeaf=15,NumberOfIterations=13187,MaximumBinCountPerFeature=133,LearningRate=1F,LabelColumnName=@"pret",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.939860737974171F,FeatureFraction=1F,L1Regularization=8.85423706093123E-10F,L2Regularization=1.33607171566014E-06F}}));

            return pipeline;
        }
    }
}
